const future_present=(interest,periods)=>{return Math.pow((1+interest),periods)}
present_future=(interest,periods)=>{return Math.pow((1+interest),(periods*-1))}
future_annual=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
return((future_present-1)/interest)}
annual_future=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
return(interest/(future_present-1))}
annual_present=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
return((interest*future_present)/(future_present-1))}
present_annual=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
return((future_present-1)/(interest*future_present))}
annual_gradient=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
return((future_present-interest*periods-1)/(interest*future_present-interest))}
present_gradient=(interest,periods)=>{const future_present=Math.pow((1+interest),periods)
const powerInterest=Math.pow(interest,2)
return((future_present-interest*periods-1)/(powerInterest*future_present))}
